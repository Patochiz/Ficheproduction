<?php
/**
 * \file       ficheproductionpdf_fix_final.php
 * \ingroup    ficheproduction
 * \brief      Solution finale pour corriger le probl√®me de chemin + classe PDF compl√®te
 */

// Load Dolibarr environment
$res = 0;
if (!$res && file_exists("../../main.inc.php")) {
    $res = @include "../../main.inc.php";
}
if (!$res) {
    die("Include of main fails");
}

require_once DOL_DOCUMENT_ROOT.'/commande/class/commande.class.php';

echo "<h1>üîß Solution Finale - Correction Compl√®te</h1>";

$id = GETPOST('id', 'int');
if (empty($id)) $id = 11;

$object = new Commande($db);
$result = $object->fetch($id);

if ($result > 0) {
    echo "<h2>‚úÖ Commande charg√©e</h2>";
    echo "ID: " . $object->id . "<br>";
    echo "R√©f√©rence: " . $object->ref . "<br>";
    
    // Le probl√®me : avec Saphir, la r√©f√©rence EST le nom du dossier
    // Donc pas besoin de lien symbolique !
    
    $baseDir = $conf->commande->multidir_output[$object->entity];
    $realDir = $baseDir . "/" . $object->ref;  // 25_04_003
    
    echo "Dossier attendu: " . $realDir . "<br>";
    echo "Existe: " . (file_exists($realDir) ? "‚úÖ Oui" : "‚ùå Non") . "<br>";
    echo "Accessible en √©criture: " . (is_writable($realDir) ? "‚úÖ Oui" : "‚ùå Non") . "<br>";
    
    if (file_exists($realDir)) {
        echo "<h2>üìÅ Contenu du dossier</h2>";
        $files = scandir($realDir);
        foreach ($files as $file) {
            if ($file != '.' && $file != '..') {
                echo "üìÑ " . $file . "<br>";
            }
        }
        
        echo "<h2>üß™ Test de la classe PDF</h2>";
        
        // Test de chargement de la classe
        try {
            require_once dol_buildpath('/ficheproduction/class/ficheproductionpdf.class.php');
            echo "‚úÖ Classe PDF charg√©e<br>";
            
            $pdfGenerator = new FicheProductionPDF($db);
            echo "‚úÖ Instance PDF cr√©√©e<br>";
            
            // Test de g√©n√©ration (version simple)
            echo "<h3>Test de g√©n√©ration...</h3>";
            
            $result = $pdfGenerator->write_file($object, $langs);
            
            if ($result > 0) {
                echo "‚úÖ PDF g√©n√©r√© avec succ√®s !<br>";
                
                $filename = $object->ref."-fiche-production.pdf";
                $filepath = $realDir . "/" . $filename;
                
                if (file_exists($filepath)) {
                    echo "‚úÖ Fichier cr√©√©: " . $filename . "<br>";
                    echo "Taille: " . filesize($filepath) . " octets<br>";
                    echo '<a href="../generate_pdf.php?id='.$id.'&action=builddoc" target="_blank">üîó Voir le PDF</a><br>';
                } else {
                    echo "‚ùå Fichier non trouv√© apr√®s g√©n√©ration<br>";
                }
                
            } else {
                echo "‚ùå Erreur de g√©n√©ration: " . $pdfGenerator->error . "<br>";
            }
            
        } catch (Exception $e) {
            echo "‚ùå Erreur classe PDF: " . $e->getMessage() . "<br>";
            echo "<pre>" . $e->getTraceAsString() . "</pre>";
        }
        
    } else {
        echo "‚ùå Le dossier n'existe pas<br>";
    }
    
} else {
    echo "‚ùå Impossible de charger la commande<br>";
}

echo "<h2>üîß Actions recommand√©es</h2>";
echo "<ol>";
echo "<li><strong>V√©rifiez que le fichier ficheproductionpdf.class.php est complet</strong> (pas tronqu√©)</li>";
echo "<li><strong>V√©rifiez les permissions</strong> du dossier 25_04_003 (doit √™tre 755 ou 771)</li>";
echo "<li><strong>Consultez les logs</strong> pour voir l'erreur exacte</li>";
echo "</ol>";

echo "<h2>üìã Informations pour le debug</h2>";
echo "Version PHP: " . PHP_VERSION . "<br>";
echo "M√©moire disponible: " . ini_get('memory_limit') . "<br>";
echo "Erreurs PHP activ√©es: " . (ini_get('display_errors') ? 'Oui' : 'Non') . "<br>";
